#!/usr/bin/env perl

use strict;
use warnings;

die "Usage: $0 0|1 <files>\n" unless @ARGV >= 2;
my $skip = shift @ARGV;    # skip=1 if 1st column lists sample id

my $nf = -1;
my $nc = -1;
my @feats = ();
my %cats = ();
my @lbs = ();
my @ubs = ();
my $vsz = @lbs;
#print "SZ: $vsz\n";

my $frst = 1;
while(<>) {
    next if m/^$/;
    chomp;
    if ($frst) {
        &get_feature_names($skip, $_, \@feats);
        $nf = $#feats+1;
        $frst=0; next;
    }
    elsif (m/[a-zA-Z]/) {
        next;
    }
    my @toks = split(/,/);
    if ($skip) { shift @toks; }    # Drop instance number
    my $cl = pop @toks;            # Drop class
    #$strcl =~ m/(\S.+\S)/;
    $cl =~ s/^\s+|\s+$//;
    #my $cl = $1;
    $cats{$cl} = 1;
    if ($vsz == 0) {
        $vsz = $#toks+1;
        @lbs = ('z') x $vsz;
        @ubs = ('z') x $vsz;
        #{ local $" = ' '; print "LBs: @lbs\nUBs: @ubs\n"; exit; }
    }
    for(my $i=0; $i<=$#toks; ++$i) {
        if ($lbs[$i] eq 'z' || $lbs[$i] > $toks[$i]) {
            $lbs[$i] = $toks[$i];
        }
        if ($ubs[$i] eq 'z' || $ubs[$i] < $toks[$i]) {
            $ubs[$i] = $toks[$i];
        }
    }
}

print "$nf\n";
for(my $i=0; $i<=$#feats; ++$i) {
    print("$feats[$i] $lbs[$i] $ubs[$i]\n");
}

my @cats = sort { $a cmp $b } keys %cats;
my $ncat = $#cats+1;
{ $" = "\n"; print "$ncat\n@cats\n"; }

1;

sub get_feature_names()
{
    my ($skip, $inpstr, $feats) = @_;
    my @toks = split(/,/, $inpstr);
    if ($skip) { shift @toks; }    # Drop instance number
    my $cl = pop @toks;            # Drop class columns
    for(my $i=0; $i<=$#toks; ++$i) {
        push @{$feats}, $toks[$i];
    }
}
